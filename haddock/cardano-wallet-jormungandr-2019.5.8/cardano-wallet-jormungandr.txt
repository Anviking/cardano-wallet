-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Wallet backend protocol-specific bits implemented using Jörmungandr
--   
--   Please see README.md
@package cardano-wallet-jormungandr
@version 2019.5.8


-- | This module contains static configuration parameters. Rather than
--   providing and carrying around a configuration file through the
--   application, we resolve configuration data at runtime using the
--   available environment.
--   
--   This gives us a flexible and portable approach to software
--   configuration, and remove some pain from the development perspective.
--   Prior to starting, the wallet is expected to have a few configuration
--   parameter available. One may rely on a `.env` file to bundle
--   configuration settings together for a given target environment.
module Cardano.Environment.Jormungandr

-- | Available network options.
data Network
Mainnet :: Network
Testnet :: Network

-- | Get the current target <a>Network</a> from the Environment.
--   
--   Throws a runtime exception is the ENV var isn't set or, is invalid.
network :: Network
newtype ProtocolMagic
ProtocolMagic :: Int32 -> ProtocolMagic

-- | Get the <a>ProtocolMagic</a> corresponding to a given <a>Network</a>.
protocolMagic :: Network -> ProtocolMagic
instance GHC.Show.Show Cardano.Environment.Jormungandr.ProtocolMagic
instance GHC.Generics.Generic Cardano.Environment.Jormungandr.ProtocolMagic
instance GHC.Enum.Enum Cardano.Environment.Jormungandr.Network
instance GHC.Classes.Eq Cardano.Environment.Jormungandr.Network
instance GHC.Show.Show Cardano.Environment.Jormungandr.Network
instance GHC.Generics.Generic Cardano.Environment.Jormungandr.Network
instance Data.Text.Class.FromText Cardano.Environment.Jormungandr.Network
instance Data.Text.Class.ToText Cardano.Environment.Jormungandr.Network


-- | The format is for the Shelley era as implemented by the Jörmungandr
--   node.
module Cardano.Wallet.Binary.Jormungandr


-- | Contains various implementation decision that are specific to a
--   particular network / protocol. This allows us to easily select a
--   particular backend (Byron, Shelley-Rust, Shelley-Haskell) and isolate
--   the bits that vary between those backends.
module Cardano.Wallet.Compatibility.Jormungandr

-- | A type representing the Jormungandr as a network target. This has an
--   influence on binary serializer &amp; network primitives. See also
--   <a>TxId</a>
data Jormungandr
instance Cardano.Wallet.Primitive.Types.TxId Cardano.Wallet.Compatibility.Jormungandr.Jormungandr
instance Cardano.Wallet.Primitive.AddressDerivation.KeyToAddress Cardano.Wallet.Compatibility.Jormungandr.Jormungandr

module Cardano.Wallet.Transaction.Jormungandr

-- | Construct a <a>TransactionLayer</a> compatible with Shelley and
--   <tt>Jörmungandr</tt>
newTransactionLayer :: TransactionLayer
